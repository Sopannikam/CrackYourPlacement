import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;

class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();
        
        for (String token : tokens) {
            if ("+".equals(token) || "-".equals(token) || "*".equals(token) || "/".equals(token)) {
                int b = stack.pop();
                int a = stack.pop();
                switch (token) {
                    case "+":
                        stack.push(a + b);
                        break;
                    case "-":
                        stack.push(a - b);
                        break;
                    case "*":
                        stack.push(a * b);
                        break;
                    case "/":
                        stack.push(a / b);
                        break;
                }
            } else {
                stack.push(Integer.parseInt(token));
            }
        }
        
        return stack.pop();
    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        
        System.out.println("Enter the number of tokens:");
        int n = Integer.parseInt(bufferedReader.readLine().trim());
        
        String[] tokens = new String[n];
        System.out.println("Enter the tokens:");
        for (int i = 0; i < n; i++) {
            tokens[i] = bufferedReader.readLine().trim();
        }

        Solution solution = new Solution();
        int result = solution.evalRPN(tokens);

        System.out.println("The result of the RPN expression is: " + result);
        
        bufferedReader.close();
    }
}
