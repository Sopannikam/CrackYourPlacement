class Solution {
public:
    long long findMinDiff(vector<long long> a, long long n, long long m) {
        // If number of students is greater than number of packets, return -1
        if (m > n) {
            return -1; // Invalid case
        }
        
        // Sort the array
        sort(a.begin(), a.end());
        
        // Initialize the minimum difference to a large value
        long long minDiff = LLONG_MAX;
        
        // Slide the window of size m over the sorted array to find the minimum difference
        for (long long i = 0; i + m - 1 < n; ++i) {
            long long currentDiff = a[i + m - 1] - a[i];
            minDiff = min(minDiff, currentDiff);
        }
        
        return minDiff;
    }
};
