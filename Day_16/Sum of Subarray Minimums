import java.util.Scanner;
import java.util.Stack;

class Solution {
    public int sumSubarrayMins(int[] arr) {
        int MOD = 1_000_000_007;
        int n = arr.length;

        Stack<Integer> stack = new Stack<>();
        int[] ple = new int[n];
        int[] nle = new int[n]; 

        // Compute PLE
        for (int i = 0; i < n; i++) {
            while (!stack.isEmpty() && arr[stack.peek()] >= arr[i]) {
                stack.pop();
            }
            ple[i] = stack.isEmpty() ? -1 : stack.peek();
            stack.push(i);
        }

        stack.clear();

        // Compute NLE
        for (int i = 0; i < n; i++) {
            while (!stack.isEmpty() && arr[stack.peek()] > arr[i]) {
                nle[stack.pop()] = i;
            }
            stack.push(i);
        }
        while (!stack.isEmpty()) {
            nle[stack.pop()] = n;
        }

        // Calculate the sum of subarray minimums
        long result = 0;
        for (int i = 0; i < n; i++) {
            int left = i - ple[i];
            int right = nle[i] - i;
            result = (result + (long) arr[i] * left * right) % MOD;
        }

        return (int) result;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter the size of the array:");
        int n = scanner.nextInt();

        int[] arr = new int[n];
        System.out.println("Enter the elements of the array:");
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }

        Solution sol = new Solution();
        int result = sol.sumSubarrayMins(arr);
        System.out.println("The sum of the minimums of all subarrays is: " + result);

        scanner.close();
    }
}
