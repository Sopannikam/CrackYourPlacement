import java.util.Scanner;
import java.util.Stack;

public class Solution {
    public String removeDuplicates(String s, int k) {

        Stack<Pair> stack = new Stack<>();

        for (char c : s.toCharArray()) {
            if (!stack.isEmpty() && stack.peek().character == c) {
                stack.peek().count++;
                if (stack.peek().count == k) {
                    stack.pop();
                }
            } else {
                stack.push(new Pair(c, 1));
            }
        }

        // Reconstruct the string from the stack
        StringBuilder result = new StringBuilder();
        while (!stack.isEmpty()) {
            Pair pair = stack.pop();
            for (int i = 0; i < pair.count; i++) {
                result.append(pair.character);
            }
        }

        return result.reverse().toString(); 
    }

    // Helper class to store the character and its count
    private static class Pair {
        char character;
        int count;

        Pair(char character, int count) {
            this.character = character;
            this.count = count;
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read input string
        System.out.println("Enter the string:");
        String s = scanner.nextLine();

        // Read integer k
        System.out.println("Enter the integer k:");
        int k = scanner.nextInt();

        Solution sol = new Solution();
        String result = sol.removeDuplicates(s, k);
        System.out.println("The final string after all duplicate removals: " + result);
    }
}
