class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        int originalColor = image[sr][sc];
        if (originalColor != color) {
            dfs(image, sr, sc, originalColor, color);
        }
        return image;
    }

    private void dfs(int[][] image, int sr, int sc, int originalColor, int newColor) {
        // Base cases
        if (sr < 0 || sc < 0 || sr >= image.length || sc >= image[0].length || image[sr][sc] != originalColor) {
            return;
        }

        // Change the color of the current pixel
        image[sr][sc] = newColor;

        // Recursively call dfs for the 4-directionally connected pixels
        dfs(image, sr - 1, sc, originalColor, newColor); // Up
        dfs(image, sr + 1, sc, originalColor, newColor); // Down
        dfs(image, sr, sc - 1, originalColor, newColor); // Left
        dfs(image, sr, sc + 1, originalColor, newColor); // Right
    }
}
