
public class Solution {
    private int minDifference = Integer.MAX_VALUE;
    private Integer prevValue = null;

    public int getMinimumDifference(TreeNode root) {
        inOrderTraversal(root);
        return minDifference;
    }

    private void inOrderTraversal(TreeNode node) {
        if (node == null) {
            return;
        }
        
        // Traverse the left subtree
        inOrderTraversal(node.left);
        
        // Process the current node
        if (prevValue != null) {
            minDifference = Math.min(minDifference, node.val - prevValue);
        }
        prevValue = node.val;
        
        // Traverse the right subtree
        inOrderTraversal(node.right);
    }
}
