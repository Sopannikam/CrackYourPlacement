class Solution {
    public int uniquePaths(int m, int n) {
        // Initialize a 2D dp array
        int[][] dp = new int[m][n];
        
        // Fill the first row and first column with 1
        // As there's only one way to reach each cell in the first row and first column
        for (int i = 0; i < m; i++) {
            dp[i][0] = 1;
        }
        for (int j = 0; j < n; j++) {
            dp[0][j] = 1;
        }
        
        // Fill the dp array using the recurrence relation
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
            }
        }
        
        // Return the value at the bottom-right corner of the grid
        return dp[m-1][n-1];
    }
}
