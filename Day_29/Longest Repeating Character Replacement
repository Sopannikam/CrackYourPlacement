class Solution {
    public int characterReplacement(String s, int k) {
        int[] count = new int[26]; 
        int maxCount = 0;
        int maxLength = 0; 
        
        int left = 0; 

        for (int right = 0; right < s.length(); right++) {
            // Update the frequency of the current character
            char currentChar = s.charAt(right);
            count[currentChar - 'A']++;
            maxCount = Math.max(maxCount, count[currentChar - 'A']);

            // Check if the current window is valid
            while (right - left + 1 - maxCount > k) {
                // If invalid, shrink the window from the left
                count[s.charAt(left) - 'A']--;
                left++;
            }

            // Update the max length of the valid window
            maxLength = Math.max(maxLength, right - left + 1);
        }

        return maxLength;
    }
}
