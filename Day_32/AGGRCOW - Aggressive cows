import java.util.Arrays;
import java.util.Scanner;

public class Main {
    // Function to check if it is possible to place cows with a given minimum distance
    public static boolean canPlaceCows(int[] stalls, int n, int cows, int minDist) {
        int count = 1; // Place the first cow in the first stall
        int lastPosition = stalls[0]; // Position of the last placed cow

        for (int i = 1; i < n; i++) {
            if (stalls[i] - lastPosition >= minDist) {
                count++;
                lastPosition = stalls[i];
                if (count == cows) {
                    return true;
                }
            }
        }
        return false;
    }

    // Function to find the largest minimum distance
    public static int largestMinDist(int[] stalls, int n, int cows) {
        Arrays.sort(stalls);

        int left = 1;
        int right = stalls[n - 1] - stalls[0];
        int result = 0;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (canPlaceCows(stalls, n, cows, mid)) {
                result = mid; // Update result and move to the right half
                left = mid + 1;
            } else {
                right = mid - 1; // Move to the left half
            }
        }

        return result;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt(); // Number of test cases

        while (t-- > 0) {
            int n = sc.nextInt(); // Number of stalls
            int cows = sc.nextInt(); // Number of cows
            int[] stalls = new int[n];

            for (int i = 0; i < n; i++) {
                stalls[i] = sc.nextInt();
            }

            System.out.println(largestMinDist(stalls, n, cows));
        }

        sc.close();
    }
}
