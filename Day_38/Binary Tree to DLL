
class Solution {
    Node head = null;   
    Node prev = null;   

    // Function to convert binary tree to doubly linked list and return it.
    Node bToDLL(Node root) {
        // Helper function to perform in-order traversal and convert
        inOrderTraversal(root);
        return head;
    }

    // Helper function to perform in-order traversal
    void inOrderTraversal(Node root) {
        if (root == null) {
            return;
        }

        // Traverse the left subtree
        inOrderTraversal(root.left);

        // Process the current node
        if (prev == null) {
            // This means we're at the leftmost node
            head = root;
        } else {
            // Adjust the pointers
            prev.right = root;
            root.left = prev;
        }
        prev = root;

        // Traverse the right subtree
        inOrderTraversal(root.right);
    }
}
