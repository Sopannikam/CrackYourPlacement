class Solution {
    public int maxCoins(int[] nums) {
        int n = nums.length;
        int[] numsExtended = new int[n + 2];
        numsExtended[0] = numsExtended[n + 1] = 1;
        
        for (int i = 0; i < n; i++) {
            numsExtended[i + 1] = nums[i];
        }
        
        int[][] dp = new int[n + 2][n + 2];
        
        // l is the length of the subarray
        for (int l = 1; l <= n; l++) {
            for (int i = 1; i <= n - l + 1; i++) {
                int j = i + l - 1;
                for (int k = i; k <= j; k++) {
                    dp[i][j] = Math.max(dp[i][j], 
                        dp[i][k - 1] + numsExtended[i - 1] * numsExtended[k] * numsExtended[j + 1] + dp[k + 1][j]);
                }
            }
        }
        
        return dp[1][n];
    }
}
