import java.util.Scanner;
import java.util.Stack;

public class Solution {
    public String removeKdigits(String num, int k) {
        Stack<Character> stack = new Stack<>();
        
        // Iterate through each digit in the number
        for (char digit : num.toCharArray()) {
            // Remove digits from the stack if the current digit is smaller
            // and if we still need to remove more digits (k > 0)
            while (!stack.isEmpty() && k > 0 && stack.peek() > digit) {
                stack.pop();
                k--;
            }
            // Add the current digit to the stack
            stack.push(digit);
        }
        
        // If there are still digits to remove, remove them from the end
        while (k > 0) {
            stack.pop();
            k--;
        }
        
        // Build the final number
        StringBuilder result = new StringBuilder();
        while (!stack.isEmpty()) {
            result.append(stack.pop());
        }
        result.reverse();
        
        // Remove leading zeros
        while (result.length() > 0 && result.charAt(0) == '0') {
            result.deleteCharAt(0);
        }
        
        // If the result is empty, return "0"
        return result.length() == 0 ? "0" : result.toString();
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int testCases = scanner.nextInt();
        
        // Iterate over all test cases
        for (int t = 0; t < testCases; t++) {
            String num = scanner.next();
            int k = scanner.nextInt();
            Solution solution = new Solution();
            String result = solution.removeKdigits(num, k);
            System.out.println(result);
        }
        
        scanner.close();
    }
}
