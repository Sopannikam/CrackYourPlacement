import java.util.HashMap;
import java.util.Scanner;

public class LargestSubMatrixWithEqualZeroesAndOnes {

    // Function to find the largest rectangular sub-matrix with equal number of 1's and 0's
    static int findLargestSubMatrix(int[][] mat) {
        int rows = mat.length;
        int cols = mat[0].length;
        int maxArea = 0;

        // Convert all 0s in the matrix to -1
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (mat[i][j] == 0) {
                    mat[i][j] = -1;
                }
            }
        }

        // Traverse all pairs of rows
        for (int startRow = 0; startRow < rows; startRow++) {
            int[] colSum = new int[cols];

            for (int endRow = startRow; endRow < rows; endRow++) {
                // Calculate the sum for each column between startRow and endRow
                for (int col = 0; col < cols; col++) {
                    colSum[col] += mat[endRow][col];
                }

                // Use HashMap to find the largest subarray with sum 0
                HashMap<Integer, Integer> map = new HashMap<>();
                map.put(0, -1); // Handle edge case when the subarray starts from the first column
                int currentSum = 0;

                for (int col = 0; col < cols; col++) {
                    currentSum += colSum[col];

                    if (map.containsKey(currentSum)) {
                        int startCol = map.get(currentSum);
                        int area = (endRow - startRow + 1) * (col - startCol);
                        maxArea = Math.max(maxArea, area);
                    } else {
                        map.put(currentSum, col);
                    }
                }
            }
        }

        return maxArea;
    }

    // Main method to handle multiple test cases
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of test cases: ");
        int t = scanner.nextInt();

        while (t-- > 0) {
            System.out.print("Enter the number of rows: ");
            int rows = scanner.nextInt();
            System.out.print("Enter the number of columns: ");
            int cols = scanner.nextInt();

            int[][] mat = new int[rows][cols];
            System.out.println("Enter the matrix:");

            for (int i = 0; i < rows; i++) {
                for (int j = 0; j < cols; j++) {
                    mat[i][j] = scanner.nextInt();
                }
            }

            int maxArea = findLargestSubMatrix(mat);
            System.out.println("Maximum area with equal number of 0s and 1s: " + maxArea);
        }

        scanner.close();
    }
}
